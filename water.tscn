[gd_scene load_steps=6 format=3 uid="uid://cnvcyx1l311dp"]

[sub_resource type="Shader" id="Shader_nimd6"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.3.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
	UV.x += sin(TIME*0.4)/150.0;
	UV.y += sin(TIME*0.3)/350.0;
	VERTEX.y += sin(TIME*0.9)/2.0;
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	ALPHA *= albedo.a * albedo_tex.a;
}
"

[sub_resource type="Gradient" id="Gradient_f6ro7"]
offsets = PackedFloat32Array(0, 0.222222, 0.507937, 1)
colors = PackedColorArray(0, 0.151737, 0.5625, 1, 0, 0.269754, 1, 1, 0.32956, 0.483101, 1, 1, 0.832036, 0.916732, 1, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_x8qax"]
noise_type = 2
frequency = 0.0265
fractal_octaves = 3
fractal_lacunarity = 0.48
fractal_gain = -0.66
cellular_jitter = -1.715

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_biara"]
in_3d_space = true
seamless = true
seamless_blend_skirt = 0.225
color_ramp = SubResource("Gradient_f6ro7")
noise = SubResource("FastNoiseLite_x8qax")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_qx0ue"]
render_priority = 0
shader = SubResource("Shader_nimd6")
shader_parameter/albedo = Color(0.89, 1, 0.990833, 0.588235)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.37
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.8
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(40, 40, 40)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = SubResource("NoiseTexture2D_biara")
shader_parameter/texture_metallic = SubResource("NoiseTexture2D_biara")

[node name="Water" type="Node3D"]

[node name="Water" type="CSGBox3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 3.0966, 0)
material_override = SubResource("ShaderMaterial_qx0ue")
size = Vector3(1000, 0.2, 1000)

[node name="Water2" type="CSGBox3D" parent="."]
transform = Transform3D(-4.37114e-08, -8.74228e-08, -1, 0, -1, 8.74228e-08, -1, 3.82137e-15, 4.37114e-08, 0, 0.072, 0)
material_override = SubResource("ShaderMaterial_qx0ue")
size = Vector3(1000, 0.2, 1000)
